[
  
    {
      "title"    : "Two Pointers",
      "subtitle" : "All patterns of binary search",
      "tags"     : "C++, Algorithms",
      "url"      : "/blogs/2025/07/25/two-pointers/",
      "date"     : "2025-07-25 00:00:00 +0530"
    } ,
  
    {
      "title"    : "Tree Concepts",
      "subtitle" : "All patterns of binary search",
      "tags"     : "C++, Algorithms",
      "url"      : "/blogs/2025/07/25/tree-concepts/",
      "date"     : "2025-07-25 00:00:00 +0530"
    } ,
  
    {
      "title"    : "Topological Sort",
      "subtitle" : "All patterns of binary search",
      "tags"     : "C++, Algorithms",
      "url"      : "/blogs/2025/07/25/topological-sort/",
      "date"     : "2025-07-25 00:00:00 +0530"
    } ,
  
    {
      "title"    : "Shortest Path In Graph",
      "subtitle" : "All patterns of binary search",
      "tags"     : "C++, Algorithms",
      "url"      : "/blogs/2025/07/25/shortest-path/",
      "date"     : "2025-07-25 00:00:00 +0530"
    } ,
  
    {
      "title"    : "Monotoneous Stack",
      "subtitle" : "All patterns of binary search",
      "tags"     : "C++, Algorithms",
      "url"      : "/blogs/2025/07/25/monotoneous-stack/",
      "date"     : "2025-07-25 00:00:00 +0530"
    } ,
  
    {
      "title"    : "Linked List - Best For Designing Data Structure?",
      "subtitle" : "All patterns of binary search",
      "tags"     : "C++, Algorithms",
      "url"      : "/blogs/2025/07/25/linked-list/",
      "date"     : "2025-07-25 00:00:00 +0530"
    } ,
  
    {
      "title"    : "Lazy Segment Tree",
      "subtitle" : "All patterns of binary search",
      "tags"     : "C++, Algorithms",
      "url"      : "/blogs/2025/07/25/lazy-segment-tree/",
      "date"     : "2025-07-25 00:00:00 +0530"
    } ,
  
    {
      "title"    : "Favourit Problem Set From Competetive Programming Contests",
      "subtitle" : "All patterns of binary search",
      "tags"     : "C++, Algorithms",
      "url"      : "/blogs/2025/07/25/favourite-competetive-programming-questions/",
      "date"     : "2025-07-25 00:00:00 +0530"
    } ,
  
    {
      "title"    : "Power of Disjoint Union Set",
      "subtitle" : "All patterns of binary search",
      "tags"     : "C++, Algorithms",
      "url"      : "/blogs/2025/07/25/disjoint-union-set/",
      "date"     : "2025-07-25 00:00:00 +0530"
    } ,
  
    {
      "title"    : "Graph Traversing",
      "subtitle" : "All patterns of binary search",
      "tags"     : "C++, Algorithms",
      "url"      : "/blogs/2025/07/25/dfs-and-bfs/",
      "date"     : "2025-07-25 00:00:00 +0530"
    } ,
  
    {
      "title"    : "Binary Search Tree",
      "subtitle" : "All patterns of binary search",
      "tags"     : "C++, Algorithms",
      "url"      : "/blogs/2025/07/25/binary-search-tree/",
      "date"     : "2025-07-25 00:00:00 +0530"
    } ,
  
    {
      "title"    : "Sorting Algorithms",
      "subtitle" : "All patterns of classical dp",
      "tags"     : "Algorithms",
      "url"      : "/blogs/2025/07/25/sorting-algorithms/",
      "date"     : "2025-07-25 00:00:00 +0530"
    } ,
  
    {
      "title"    : "Sliding Window",
      "subtitle" : "All patterns of classical dp",
      "tags"     : "Algorithms",
      "url"      : "/blogs/2025/07/25/sliding-window/",
      "date"     : "2025-07-25 00:00:00 +0530"
    } ,
  
    {
      "title"    : "Simple Segment Tree",
      "subtitle" : "All patterns of classical dp",
      "tags"     : "Algorithms",
      "url"      : "/blogs/2025/07/25/segment-tree/",
      "date"     : "2025-07-25 00:00:00 +0530"
    } ,
  
    {
      "title"    : "Classical Dynamic Programming Problems",
      "subtitle" : "All patterns of classical dp",
      "tags"     : "Algorithms",
      "url"      : "/blogs/2025/07/25/classical-dp/",
      "date"     : "2025-07-25 00:00:00 +0530"
    } ,
  
    {
      "title"    : "Binary Search",
      "subtitle" : "All patterns of binary search",
      "tags"     : "C++, Algorithms",
      "url"      : "/blogs/2025/07/25/binary-search/",
      "date"     : "2025-07-25 00:00:00 +0530"
    } 
  
]